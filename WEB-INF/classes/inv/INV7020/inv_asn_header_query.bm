<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wanghaitao  
    $Date: 2014-10-10 下午04:38:31  
    $Revision: 1.0  
    $Purpose: 送货单查询-供应方，按送货单头查询BM
-->
<bm:model xmlns:s="aurora.plugin.script" xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="asn_number desc">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT *
				  FROM (SELECT iah.asn_header_id,
				               iah.display_asn_number as asn_number,
				               (SELECT atv.asn_type_name FROM inv_asn_types_vl atv WHERE atv.asn_type_code = iah.asn_type_code) AS asn_type_name,
				               iah.business_unit_id,
				               (SELECT buv.business_unit_name
				                  FROM fnd_business_units_vl buv
				                 WHERE buv.business_unit_id = iah.business_unit_id) AS business_unit_name,
				               iah.owner_business_group,
				               iah.owner_company_id,
				               iah.coop_company_id,
				               (SELECT fcv.company_full_name FROM fnd_companies_vl fcv WHERE fcv.company_id = iah.coop_company_id) AS company_name,
				               iah.status,
				               (SELECT cvv.code_value_name
				                  FROM sys_code_values_v cvv
				                 WHERE cvv.code = 'INV_ASN_HEADERS_STATUS'
				                       AND cvv.code_value = iah.status) AS header_status,
				               iah.ship_date,
				               to_char(iah.ship_date,
				                       'yyyy-mm-dd') AS ship_date_fmt,
				               iah.expected_date,
				               to_char(iah.expected_date,
				                       'yyyy-mm-dd') AS expected_date_fmt,
				               iah.creation_date,
				               to_char(iah.creation_date,
				                       'yyyy-mm-dd')AS creation_date_fmt,
				               iah.comments,
				               iah.location_id,
				               (SELECT fl.address_line_1 FROM fnd_locations fl WHERE fl.location_id = iah.location_id) AS location_name,
				               iah.ship_to_organization_id,
				               (SELECT iov.description
				                  FROM inv_organizations_vl iov
				                 WHERE iov.inv_organization_id = iah.ship_to_organization_id) AS ship_to_organization_name,
				               iah.created_by,
				               (SELECT al.process_status
				                  FROM inv_asn_lines al
				                 WHERE al.asn_header_id = iah.asn_header_id
				                       AND rownum = 1) AS process_status,
				               (SELECT nvl(decode(al.process_status,
				                                  'SUCCESSED',
				                                  '发送成功',
				                                  'WAITING',
				                                  '发送中',
				                                  'IMPORTED',
				                                  '正在发送',
				                                  'FAILED',
				                                  '发送失败',
				                                  ' '),
				                           ' ')
				                  FROM inv_asn_lines al
				                 WHERE al.asn_header_id = iah.asn_header_id
				                       AND rownum = 1) AS process_status_name,
				               (SELECT al.process_message
				                  FROM inv_asn_lines al
				                 WHERE al.asn_header_id = iah.asn_header_id
				                 	   AND al.process_message is not null
				                       AND rownum = 1) AS process_message,
				               (SELECT al.cancel_process_status
				                  FROM inv_asn_lines al
				                 WHERE al.asn_header_id = iah.asn_header_id
				                       AND rownum = 1) AS cancel_process_status,
				               (SELECT nvl(decode(al.cancel_process_status,
				                                  'SUCCESSED',
				                                  '取消成功',
				                                  'WAITING',
				                                  '等待反馈',
				                                  'IMPORTED',
				                                  '正在处理',
				                                  'FAILED',
				                                  '取消失败',
				                                  ' '),
				                           ' ')
				                  FROM inv_asn_lines al
				                 WHERE al.asn_header_id = iah.asn_header_id
				                       AND rownum = 1) AS cancel_process_status_name,
				               (SELECT al.cancel_process_message
				                  FROM inv_asn_lines al
				                 WHERE al.asn_header_id = iah.asn_header_id
				                 	   AND al.cancel_process_message is not null
				                       AND rownum = 1) AS cancel_process_message,
				               NULL AS useless_id_1,
						       NULL AS useless_id_2,
						       NULL AS useless_id_3,
						       NULL AS useless_id_4,
						       NULL AS useless_id_5,
						       NULL AS useless_id_6,
						       NULL AS useless_id_7,
						       NULL AS useless_id_8
				          FROM inv_asn_headers iah) v
          		#AUTHORIY_FROM#
          		#WHERE_CLAUSE# 
          		#AUTHORIY_WHERE# 
          		#ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="asn_number" queryExpression="v.asn_number like &apos;%&apos;||trim(${@asn_number})||&apos;%&apos;"/>
        <bm:query-field name="company_id" queryExpression="v.coop_company_id = ${@company_id}"/>
        <bm:query-field name="business_unit_id" queryExpression="v.business_unit_id = ${@business_unit_id}"/>
        <!-- <bm:query-field name="status" queryExpression="v.status = ${@status}"/> -->
        <bm:query-field name="status_tree" queryExpression="(v.status in (decode(${@status},&apos;WAIT_TO_RECEIVE&apos;,&apos;SEND_OUT&apos;,&apos;ALL_RECEIVE&apos;,&apos;ALL_CLOSE&apos;,&apos;CLOSED&apos;,&apos;ALL_CLOSE&apos;,${@status}),decode(${@status1},&apos;WAIT_TO_RECEIVE&apos;,&apos;SEND_OUT&apos;,&apos;ALL_RECEIVE&apos;,&apos;ALL_CLOSE&apos;,&apos;CLOSED&apos;,&apos;ALL_CLOSE&apos;,${@status1}),decode(${@status2},&apos;WAIT_TO_RECEIVE&apos;,&apos;SEND_OUT&apos;,&apos;ALL_RECEIVE&apos;,&apos;ALL_CLOSE&apos;,&apos;CLOSED&apos;,&apos;ALL_CLOSE&apos;,${@status2}))                                                             or v.cancel_process_status in (nvl(${@cancel_process_status_name},&apos;1&apos;),nvl(${@cancel_process_status_name1},&apos;1&apos;),nvl(${@cancel_process_status_name2},&apos;1&apos;))                                                             or v.process_status in (substr(${@send_successed},6),substr(${@send_waiting},6),substr(${@send_failed},6))                                                             or exists (select 1 from inv_asn_lines al where al.asn_header_id = v.asn_header_id and al.process_status = &apos;SUCCESSED&apos; and ${@can_print} = &apos;CAN_PRINT&apos;))"/>
        <bm:query-field name="status" queryExpression="v.status = ${@status}"/>
        <bm:query-field name="process_status" queryExpression="v.process_status = ${@process_status}"/>
        <bm:query-field name="cancel_process_status1" queryExpression="v.cancel_process_status = ${@cancel_process_status1}"/>
        <bm:query-field name="can_print" queryExpression="exists (select 1 from inv_asn_lines al where al.asn_header_id = v.asn_header_id and al.process_status = &apos;SUCCESSED&apos; and ${@can_print} = &apos;CAN_PRINT&apos;)"/>
        <bm:query-field name="ship_to_organization_id" queryExpression="v.ship_to_organization_id = ${@ship_to_organization_id}"/>
        <bm:query-field name="expected_date_from" queryExpression="v.expected_date &gt;=to_date(${@expected_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="expected_date_to" queryExpression="v.expected_date &lt;=to_date(${@expected_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="ship_date_from" queryExpression="v.ship_date &gt;=to_date(${@ship_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="ship_date_to" queryExpression="v.ship_date &lt;=to_date(${@ship_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="creation_date_from" queryExpression="v.creation_date &gt;= to_date(${@creation_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="creation_date_to" queryExpression="v.creation_date &lt;= to_date(${@creation_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="exclude_all_close" queryExpression="((${@exclude_all_close} = &apos;Y&apos; and v.status != &apos;ALL_CLOSE&apos;) or (${@exclude_all_close} = &apos;N&apos; and 1=1))"/>
        <bm:query-field name="process_status" queryExpression="v.process_status = ${@process_status}"/>
        <bm:query-field name="cancel_process_status" queryExpression=" v.cancel_process_status is null and v.process_status = &apos;SUCCESSED&apos; and ${@status} = &apos;ALL_CLOSE&apos;"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="1=1"/>
        <bm:data-filter expression="owner_business_group=${/session/@business_group}"/>
    </bm:data-filters>
    <authority foundation_code="INV_ASN">
        <authority-segment source_alias="v" source_name="owner_company_id" type="COMPANY"/>
        <authority-segment source_alias="v" source_name="business_unit_id" type="BUSINESS_UNIT"/>
        <authority-segment source_alias="v" source_name="created_by" type="CREATER"/>
        <authority-segment source_alias="v" source_name="useless_id_1" type="RECEIVER"/>
        <authority-segment source_alias="v" source_name="useless_id_2" type="CLIENT"/>
        <authority-segment source_alias="v" source_name="useless_id_3" type="CLIENT_SITE"/>
        <authority-segment source_alias="v" source_name="useless_id_4" type="VENDOR"/>
        <authority-segment source_alias="v" source_name="useless_id_5" type="VENDOR_SITE"/>
        <authority-segment source_alias="v" source_name="useless_id_6" type="PUR_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_7" type="INV_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_8" type="SD_ORGANIZATION"/>
        <authority-segment source_alias="v" source_name="useless_id_9" type="PURHASE_MATERIAL"/>
        <authority-segment source_alias="v" source_name="useless_id_10" type="SALES_PRODUCTION"/>
    </authority>
    <bm:features>
        <s:bm-script><![CDATA[
        	var cx = Packages.aurora.javascript.Context.getCurrentContext();
      		Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_flex_dynamic_tools.js");
          	Packages.aurora.plugin.script.engine.ScriptImportor.defineExternScript(cx, this, $ctx.getData(), "fnd_dynamic_authority.js");
        ]]></s:bm-script>
    </bm:features>
</bm:model>

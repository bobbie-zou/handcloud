<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: lily  
    $Date: 2013-1-18 下午04:04:31  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="l.line_num asc,pll.shipment_num asc">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    pll.pur_line_location_id,
                    l.line_num,
                    pll.shipment_num,
                    (SELECT t.partner_item_id
                      FROM mtl_item_partners t
                     WHERE t.business_group = h.coop_business_group
                           AND t.company_id = h.coop_company_id
                           AND t.partner_way = 'SUPPLY'
                           AND t.item_id = l.item_id) vendor_item_id,
                   (SELECT nvl(siv.display_item_code, siv.item_code) 
                      FROM mtl_system_items_vl siv,
                           mtl_item_partners   t
                     WHERE siv.item_id = t.partner_item_id
                           AND t.business_group = h.coop_business_group
                           AND t.company_id = h.coop_company_id
                           AND t.partner_way = 'SUPPLY'
                           AND t.item_id = l.item_id) vendor_item_code,
                   (SELECT siv.item_name
                      FROM mtl_system_items_vl siv,
                           mtl_item_partners   t
                     WHERE siv.item_id = t.partner_item_id
                           AND t.business_group = h.coop_business_group
                           AND t.company_id = h.coop_company_id
                           AND t.partner_way = 'SUPPLY'
                           AND t.item_id = l.item_id) vendor_item_name,
                    l.item_code,
                    l.item_description,
                    msi.item_specs,
                    msi.item_model,
                    l.unit_meas_lookup_code,
                    pll.quantity,
                      fnd_document_control_pkg.get_reality_value(
                      p_rule_code    => 'PRICE_SECRECY',
                      p_role_id         => ${/session/@role_id},
                                             p_foundation_code => 'PUR_PO',
                                             p_document_id     => h.pur_header_id,
                                             p_control_area    => 'EXTERNAL',
                                             p_business_group  => ${/session/@business_group},
                                             p_value           => l.unit_price) unit_price,
                    fnd_document_control_pkg.get_reality_value(
                    p_rule_code    => 'PRICE_SECRECY',
                    p_role_id         => ${/session/@role_id},
                                             p_foundation_code => 'PUR_PO',
                                             p_document_id     => h.pur_header_id,
                                             p_control_area    => 'EXTERNAL',
                                             p_business_group  => ${/session/@business_group},
                                             p_value           => pll.quantity * l.unit_price) line_amount,
                    TO_CHAR(pll.need_by_date, 'yyyy-mm-dd') AS need_by_date,
                    TO_CHAR(pll.promised_date, 'yyyy-mm-dd') AS promised_date,
                    DECODE(pll.consigned_flag, 'Y', '是', '否') AS consigned_flag,
                    pll.vendor_desc,
                    pll.ship_to_location_name,
                    h.bill_to_location_name,
                    l.line_type_name,
                    l.category_name,
                    l.secondary_unit_of_measure,
                    l.secondary_quantity,
                    pll.c_attribute1,
                    pll.c_attribute2,
                    pll.c_attribute3,
                    pll.warehouse_id,
			       (SELECT iwv.description FROM inv_warehouses_vl iwv WHERE iwv.warehouse_id = pll.warehouse_id) warehouse_name,
			       pll.inv_location_id,
			       (SELECT ilv.description FROM inv_locations_vl ilv WHERE ilv.location_id = pll.inv_location_id) inv_location_name
                FROM mtl_system_items msi,
                    pur_headers_all_v h,
                    pur_lines_all l,
                    pur_line_locations_all pll #WHERE_CLAUSE# #ORDER_BY_CLAUSE#
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
                BEGIN
                    pur_po_pkg.save_line_locations_all(p_pur_line_location_id => ${@pur_line_location_id},
                                                             p_feedback_info => ${@vendor_desc},
                                                             p_user_id => ${/session/@user_id});
                END;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="pur_header_id" queryExpression="h.pur_header_id = ${@pur_header_id} and h.coop_business_group = ${/session/@business_group}"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="h.pur_header_id = l.pur_header_id"/>
        <bm:data-filter expression="l.pur_line_id = pll.pur_line_id"/>
        <bm:data-filter expression="msi.item_id(+) = l.item_id"/>
        <bm:data-filter expression="h.coop_company_id is not null"/>
        <bm:data-filter expression="h.pur_header_id = ${@pur_header_id} and h.coop_business_group = ${/session/@business_group}"/>
    </bm:data-filters>
</bm:model>
